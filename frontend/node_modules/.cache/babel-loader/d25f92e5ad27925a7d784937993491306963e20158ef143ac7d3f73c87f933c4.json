{"ast":null,"code":"var _jsxFileName = \"/home/filimda/Project/coloring/frontend/src/pages/dima.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dima = () => {\n  _s();\n  let {\n    slug\n  } = useParams();\n  const [users, setUsers] = useState([]);\n  const fetchData = async () => {\n    const response = await fetch(\"http://localhost:8000/api/posts/\" + slug);\n    const data = await response.json();\n    setUsers(data);\n  };\n  useEffect(() => {\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [users.title, \" @ \", users.slug, /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"ID: \", slug]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 25\n        }, this), function HeaderImage(_ref) {\n          let {\n            url,\n            alt,\n            width,\n            height\n          } = _ref;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: url,\n              alt: alt,\n              width: width,\n              height: height\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 7\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 5\n          }, this);\n        }]\n      }, users.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 25\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n};\n_s(Dima, \"NYLCK4cTh/m4ctwGdVM577TNWcQ=\", false, function () {\n  return [useParams];\n});\n_c = Dima;\nexport default Dima;\nvar _c;\n$RefreshReg$(_c, \"Dima\");","map":{"version":3,"names":["React","useEffect","useState","useParams","jsxDEV","_jsxDEV","Dima","_s","slug","users","setUsers","fetchData","response","fetch","data","json","children","title","fileName","_jsxFileName","lineNumber","columnNumber","HeaderImage","_ref","url","alt","width","height","src","id","_c","$RefreshReg$"],"sources":["/home/filimda/Project/coloring/frontend/src/pages/dima.js"],"sourcesContent":["import React, {useEffect, useState,} from 'react';\nimport { useParams } from \"react-router-dom\"\n\n\n\nconst Dima = () => {\n    let {slug} = useParams()\n    const [users, setUsers] = useState([])\n    const fetchData = async () => {\n     \n      const response = await fetch(\"http://localhost:8000/api/posts/\"+slug)\n      const data = await response.json()\n      setUsers(data)\n      }\n    \n      \n   \n\n  useEffect(() => {\n    fetchData()\n  }, [])\n\n\n    return (\n     \n        <div>        \n                          \n                <ul>\n                    \n                        <li key={users.id}>{users.title} @ {users.slug}\n\n                        <h3>ID: {slug}</h3>\n                      \n                      \n                       \n                        {function HeaderImage({ url, alt, width, height }) {\n  return (\n    <div>\n      <img src={url} alt={alt} width={width} height={height}/>\n    </div>\n  );\n}\n}\n\n\n                 \n                                                                     \n                       \n                        \n                        </li>\n                        \n                                       \n                </ul>\n     \n    </div>\n  )\n}\n   \n\n  \n  export default Dima;\n  "],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AACjD,SAASC,SAAS,QAAQ,kBAAkB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAI5C,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACf,IAAI;IAACC;EAAI,CAAC,GAAGL,SAAS,EAAE;EACxB,MAAM,CAACM,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAMS,SAAS,GAAG,MAAAA,CAAA,KAAY;IAE5B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,kCAAkC,GAACL,IAAI,CAAC;IACrE,MAAMM,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,EAAE;IAClCL,QAAQ,CAACI,IAAI,CAAC;EACd,CAAC;EAKLb,SAAS,CAAC,MAAM;IACdU,SAAS,EAAE;EACb,CAAC,EAAE,EAAE,CAAC;EAGJ,oBAEIN,OAAA;IAAAW,QAAA,eAEQX,OAAA;MAAAW,QAAA,eAEQX,OAAA;QAAAW,QAAA,GAAoBP,KAAK,CAACQ,KAAK,EAAC,KAAG,EAACR,KAAK,CAACD,IAAI,eAE9CH,OAAA;UAAAW,QAAA,GAAI,MAAI,EAACR,IAAI;QAAA;UAAAU,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAM,EAIlB,SAASC,WAAWA,CAAAC,IAAA,EAA8B;UAAA,IAA7B;YAAEC,GAAG;YAAEC,GAAG;YAAEC,KAAK;YAAEC;UAAO,CAAC,GAAAJ,IAAA;UACvE,oBACElB,OAAA;YAAAW,QAAA,eACEX,OAAA;cAAKuB,GAAG,EAAEJ,GAAI;cAACC,GAAG,EAAEA,GAAI;cAACC,KAAK,EAAEA,KAAM;cAACC,MAAM,EAAEA;YAAO;cAAAT,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA;UAAE;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QACpD;QAEV,CAAC;MAAA,GAZgCZ,KAAK,CAACoB,EAAE;QAAAX,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAoBZ;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAGR;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAEX;AAEV,CAAC;AAAAd,EAAA,CAnDKD,IAAI;EAAA,QACOH,SAAS;AAAA;AAAA2B,EAAA,GADpBxB,IAAI;AAuDR,eAAeA,IAAI;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}