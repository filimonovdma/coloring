{"ast":null,"code":"var _jsxFileName = \"/home/filimda/Project/coloring/frontend/src/pages/dima.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dima = () => {\n  _s();\n  let {\n    slug\n  } = useParams();\n  const [users, setUsers] = useState([]);\n  const fetchData = async () => {\n    const response = await fetch(\"http://localhost:8000/api2/pages/dima/\");\n    const data = await response.json();\n    setUsers(data);\n  };\n  useEffect(() => {\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [users.title, \" @ \", users.meta && users.meta.slug, /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"ID: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: users.body && users.body[2].value.image.url\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 25\n        }, this), \"lbf\", /*#__PURE__*/_jsxDEV(\"p\", {\n          children: users.body && users.body.filter(v => v.type == 'image_text') && users.body.image.url\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 25\n        }, this)]\n      }, users.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 25\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n};\n_s(Dima, \"NYLCK4cTh/m4ctwGdVM577TNWcQ=\", false, function () {\n  return [useParams];\n});\n_c = Dima;\nexport default Dima;\nvar _c;\n$RefreshReg$(_c, \"Dima\");","map":{"version":3,"names":["React","useEffect","useState","useParams","jsxDEV","_jsxDEV","Dima","_s","slug","users","setUsers","fetchData","response","fetch","data","json","children","title","meta","fileName","_jsxFileName","lineNumber","columnNumber","body","value","image","url","filter","v","type","id","_c","$RefreshReg$"],"sources":["/home/filimda/Project/coloring/frontend/src/pages/dima.js"],"sourcesContent":["import React, {useEffect, useState,} from 'react';\nimport { useParams } from \"react-router-dom\"\n\n\n\nconst Dima = () => {\n    let {slug} = useParams()\n    const [users, setUsers] = useState([])\n    const fetchData = async () => {\n     \n      const response = await fetch(\"http://localhost:8000/api2/pages/dima/\")\n      const data = await response.json()\n      setUsers(data)\n      }\n    \n      \n   \n\n  useEffect(() => {\n    fetchData()\n  }, [])\n\n\n    return (\n     \n        <div>        \n                          \n                <ul>\n                    \n                        <li key={users.id}>{users.title} @ {users.meta && users.meta.slug}\n\n                        <h3>ID: </h3>\n\n                        <p>{users.body && users.body[2].value.image.url}</p>   \n                        lbf\n                        <p>{users.body && users.body.filter(v => v.type == 'image_text' ) && users.body.image.url}</p>   \n\n                        \n                        \n                        </li>\n                        \n                                       \n                </ul>\n     \n    </div>\n  )\n}\n   \n\n  \n  export default Dima;\n  "],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AACjD,SAASC,SAAS,QAAQ,kBAAkB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAI5C,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACf,IAAI;IAACC;EAAI,CAAC,GAAGL,SAAS,EAAE;EACxB,MAAM,CAACM,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAMS,SAAS,GAAG,MAAAA,CAAA,KAAY;IAE5B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,wCAAwC,CAAC;IACtE,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,EAAE;IAClCL,QAAQ,CAACI,IAAI,CAAC;EACd,CAAC;EAKLb,SAAS,CAAC,MAAM;IACdU,SAAS,EAAE;EACb,CAAC,EAAE,EAAE,CAAC;EAGJ,oBAEIN,OAAA;IAAAW,QAAA,eAEQX,OAAA;MAAAW,QAAA,eAEQX,OAAA;QAAAW,QAAA,GAAoBP,KAAK,CAACQ,KAAK,EAAC,KAAG,EAACR,KAAK,CAACS,IAAI,IAAIT,KAAK,CAACS,IAAI,CAACV,IAAI,eAEjEH,OAAA;UAAAW,QAAA,EAAI;QAAI;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAK,eAEbjB,OAAA;UAAAW,QAAA,EAAIP,KAAK,CAACc,IAAI,IAAId,KAAK,CAACc,IAAI,CAAC,CAAC,CAAC,CAACC,KAAK,CAACC,KAAK,CAACC;QAAG;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAK,OAEpD,eAAAjB,OAAA;UAAAW,QAAA,EAAIP,KAAK,CAACc,IAAI,IAAId,KAAK,CAACc,IAAI,CAACI,MAAM,CAACC,CAAC,IAAIA,CAAC,CAACC,IAAI,IAAI,YAAY,CAAE,IAAIpB,KAAK,CAACc,IAAI,CAACE,KAAK,CAACC;QAAG;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAK;MAAA,GANrFb,KAAK,CAACqB,EAAE;QAAAX,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAUZ;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAGR;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAEX;AAEV,CAAC;AAAAf,EAAA,CAzCKD,IAAI;EAAA,QACOH,SAAS;AAAA;AAAA4B,EAAA,GADpBzB,IAAI;AA6CR,eAAeA,IAAI;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}